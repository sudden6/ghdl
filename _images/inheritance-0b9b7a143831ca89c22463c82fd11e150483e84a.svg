<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: inheritancea759badd63 Pages: 1 -->
<svg width="576pt" height="64pt"
 viewBox="0.00 0.00 576.00 64.46" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(2.42 2.42) rotate(0) translate(4 152)">
<title>inheritancea759badd63</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-152 1390,-152 1390,4 -4,4"/>
<!-- pyGHDL.dom.Concurrent.ElsifGenerateBranch -->
<g id="node1" class="node">
<title>pyGHDL.dom.Concurrent.ElsifGenerateBranch</title>
<g id="a_node1"><a xlink:href="../pyGHDL/pyGHDL.dom.Concurrent.html#pyGHDL.dom.Concurrent.ElsifGenerateBranch" xlink:title="pyGHDL.dom.Concurrent.ElsifGenerateBranch" target="_top">
<polygon fill="none" stroke="black" stroke-width="0.5" points="1386,-73 1146,-73 1146,-54 1386,-54 1386,-73"/>
<text text-anchor="middle" x="1266" y="-61" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyGHDL.dom.Concurrent.ElsifGenerateBranch</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.ElsifGenerateBranch -->
<g id="node2" class="node">
<title>pyVHDLModel.SyntaxModel.ElsifGenerateBranch</title>
<polygon fill="none" stroke="black" stroke-width="0.5" points="1110,-73 855,-73 855,-54 1110,-54 1110,-73"/>
<text text-anchor="middle" x="982.5" y="-61" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.ElsifGenerateBranch</text>
</g>
<!-- pyVHDLModel.SyntaxModel.ElsifGenerateBranch&#45;&gt;pyGHDL.dom.Concurrent.ElsifGenerateBranch -->
<g id="edge1" class="edge">
<title>pyVHDLModel.SyntaxModel.ElsifGenerateBranch&#45;&gt;pyGHDL.dom.Concurrent.ElsifGenerateBranch</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M1110.25,-63.5C1120.32,-63.5 1130.48,-63.5 1140.53,-63.5"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="1140.77,-65.25 1145.77,-63.5 1140.77,-61.75 1140.77,-65.25"/>
</g>
<!-- pyVHDLModel.ModelEntity -->
<g id="node3" class="node">
<title>pyVHDLModel.ModelEntity</title>
<g id="a_node3"><a xlink:title="``ModelEntity`` is the base class for all classes in the VHDL language model,">
<polygon fill="none" stroke="black" stroke-width="0.5" points="483.5,-148 336.5,-148 336.5,-129 483.5,-129 483.5,-148"/>
<text text-anchor="middle" x="410" y="-136" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.ModelEntity</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.GenerateBranch -->
<g id="node6" class="node">
<title>pyVHDLModel.SyntaxModel.GenerateBranch</title>
<g id="a_node6"><a xlink:title="A ``GenerateBranch`` is a base&#45;class for all branches in a generate statements.">
<polygon fill="none" stroke="black" stroke-width="0.5" points="817.5,-101 583.5,-101 583.5,-82 817.5,-82 817.5,-101"/>
<text text-anchor="middle" x="700.5" y="-89" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.GenerateBranch</text>
</a>
</g>
</g>
<!-- pyVHDLModel.ModelEntity&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch -->
<g id="edge4" class="edge">
<title>pyVHDLModel.ModelEntity&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M483.62,-129.55C503.85,-126.86 525.81,-123.75 546,-120.5 579.92,-115.04 617.85,-107.88 647.52,-102.04"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="648.02,-103.73 652.59,-101.05 647.34,-100.3 648.02,-103.73"/>
</g>
<!-- pyVHDLModel.SyntaxModel.ConcurrentDeclarations -->
<g id="node4" class="node">
<title>pyVHDLModel.SyntaxModel.ConcurrentDeclarations</title>
<polygon fill="none" stroke="black" stroke-width="0.5" points="545,-111 275,-111 275,-92 545,-92 545,-111"/>
<text text-anchor="middle" x="410" y="-99" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.ConcurrentDeclarations</text>
</g>
<!-- pyVHDLModel.SyntaxModel.ConcurrentDeclarations&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch -->
<g id="edge5" class="edge">
<title>pyVHDLModel.SyntaxModel.ConcurrentDeclarations&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M545.11,-96.85C556.22,-96.47 567.4,-96.08 578.4,-95.7"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="578.5,-97.45 583.44,-95.52 578.38,-93.95 578.5,-97.45"/>
</g>
<!-- pyVHDLModel.SyntaxModel.ConcurrentStatements -->
<g id="node5" class="node">
<title>pyVHDLModel.SyntaxModel.ConcurrentStatements</title>
<polygon fill="none" stroke="black" stroke-width="0.5" points="542.5,-74 277.5,-74 277.5,-55 542.5,-55 542.5,-74"/>
<text text-anchor="middle" x="410" y="-62" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.ConcurrentStatements</text>
</g>
<!-- pyVHDLModel.SyntaxModel.ConcurrentStatements&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch -->
<g id="edge6" class="edge">
<title>pyVHDLModel.SyntaxModel.ConcurrentStatements&#45;&gt;pyVHDLModel.SyntaxModel.GenerateBranch</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M512.71,-74.02C538.57,-76.44 566.43,-79.05 592.53,-81.49"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="592.59,-83.25 597.73,-81.98 592.92,-79.77 592.59,-83.25"/>
</g>
<!-- pyVHDLModel.SyntaxModel.GenerateBranch&#45;&gt;pyVHDLModel.SyntaxModel.ElsifGenerateBranch -->
<g id="edge2" class="edge">
<title>pyVHDLModel.SyntaxModel.GenerateBranch&#45;&gt;pyVHDLModel.SyntaxModel.ElsifGenerateBranch</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M796.69,-81.98C823.85,-79.27 853.53,-76.3 881,-73.55"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="881.3,-75.28 886.1,-73.04 880.95,-71.8 881.3,-75.28"/>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinElsifBranch -->
<g id="node7" class="node">
<title>pyVHDLModel.SyntaxModel.MixinElsifBranch</title>
<g id="a_node7"><a xlink:title="A ``BaseElsifBranch`` is a mixin&#45;class for all elsif&#45;branches.">
<polygon fill="none" stroke="black" stroke-width="0.5" points="819,-55 582,-55 582,-36 819,-36 819,-55"/>
<text text-anchor="middle" x="700.5" y="-43" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.MixinElsifBranch</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinElsifBranch&#45;&gt;pyVHDLModel.SyntaxModel.ElsifGenerateBranch -->
<g id="edge3" class="edge">
<title>pyVHDLModel.SyntaxModel.MixinElsifBranch&#45;&gt;pyVHDLModel.SyntaxModel.ElsifGenerateBranch</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M819.03,-53.06C829.19,-53.71 839.51,-54.37 849.77,-55.03"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="849.7,-56.78 854.81,-55.36 849.93,-53.29 849.7,-56.78"/>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinBranch -->
<g id="node8" class="node">
<title>pyVHDLModel.SyntaxModel.MixinBranch</title>
<g id="a_node8"><a xlink:title="A ``BaseBranch`` is a mixin&#45;class for all statements with branches.">
<polygon fill="none" stroke="black" stroke-width="0.5" points="227,-56 11,-56 11,-37 227,-37 227,-56"/>
<text text-anchor="middle" x="119" y="-44" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.MixinBranch</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinConditionalBranch -->
<g id="node10" class="node">
<title>pyVHDLModel.SyntaxModel.MixinConditionalBranch</title>
<g id="a_node10"><a xlink:title="A ``BaseBranch`` is a mixin&#45;class for all branch statements with a condition.">
<polygon fill="none" stroke="black" stroke-width="0.5" points="546,-37 274,-37 274,-18 546,-18 546,-37"/>
<text text-anchor="middle" x="410" y="-25" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.MixinConditionalBranch</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinBranch&#45;&gt;pyVHDLModel.SyntaxModel.MixinConditionalBranch -->
<g id="edge7" class="edge">
<title>pyVHDLModel.SyntaxModel.MixinBranch&#45;&gt;pyVHDLModel.SyntaxModel.MixinConditionalBranch</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M227.2,-39.45C240.65,-38.57 254.56,-37.65 268.42,-36.74"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="268.65,-38.48 273.53,-36.41 268.42,-34.99 268.65,-38.48"/>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinConditional -->
<g id="node9" class="node">
<title>pyVHDLModel.SyntaxModel.MixinConditional</title>
<g id="a_node9"><a xlink:title="A ``BaseConditional`` is a mixin&#45;class for all statements with a condition.">
<polygon fill="none" stroke="black" stroke-width="0.5" points="238,-19 0,-19 0,0 238,0 238,-19"/>
<text text-anchor="middle" x="119" y="-7" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.MixinConditional</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinConditional&#45;&gt;pyVHDLModel.SyntaxModel.MixinConditionalBranch -->
<g id="edge8" class="edge">
<title>pyVHDLModel.SyntaxModel.MixinConditional&#45;&gt;pyVHDLModel.SyntaxModel.MixinConditionalBranch</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M238.38,-16.87C248.43,-17.5 258.65,-18.14 268.84,-18.77"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="268.74,-20.52 273.84,-19.08 268.96,-17.02 268.74,-20.52"/>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinConditionalBranch&#45;&gt;pyVHDLModel.SyntaxModel.MixinElsifBranch -->
<g id="edge9" class="edge">
<title>pyVHDLModel.SyntaxModel.MixinConditionalBranch&#45;&gt;pyVHDLModel.SyntaxModel.MixinElsifBranch</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M546.38,-35.95C556.48,-36.58 566.63,-37.21 576.65,-37.84"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="576.77,-39.6 581.87,-38.16 576.99,-36.1 576.77,-39.6"/>
</g>
</g>
</svg>
