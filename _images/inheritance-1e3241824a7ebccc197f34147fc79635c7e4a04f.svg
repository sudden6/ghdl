<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: inheritance605eaafe46 Pages: 1 -->
<svg width="576pt" height="48pt"
 viewBox="0.00 0.00 576.00 47.56" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(2.1 2.1) rotate(0) translate(4 96)">
<title>inheritance605eaafe46</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-96 1207,-96 1207,4 -4,4"/>
<!-- pyGHDL.dom.DOMMixin -->
<g id="node1" class="node">
<title>pyGHDL.dom.DOMMixin</title>
<g id="a_node1"><a xlink:href="../pyGHDL.dom.html#pyGHDL.dom.DOMMixin" xlink:title="pyGHDL.dom.DOMMixin" target="_top">
<polygon fill="none" stroke="black" stroke-width="0.5" points="908.5,-92 773.5,-92 773.5,-73 908.5,-73 908.5,-92"/>
<text text-anchor="middle" x="841" y="-80" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyGHDL.dom.DOMMixin</text>
</a>
</g>
</g>
<!-- pyGHDL.dom.Sequential.WaitStatement -->
<g id="node2" class="node">
<title>pyGHDL.dom.Sequential.WaitStatement</title>
<g id="a_node2"><a xlink:href="../pyGHDL/pyGHDL.dom.Sequential.html#pyGHDL.dom.Sequential.WaitStatement" xlink:title="pyGHDL.dom.Sequential.WaitStatement" target="_top">
<polygon fill="none" stroke="black" stroke-width="0.5" points="1203,-73 991,-73 991,-54 1203,-54 1203,-73"/>
<text text-anchor="middle" x="1097" y="-61" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyGHDL.dom.Sequential.WaitStatement</text>
</a>
</g>
</g>
<!-- pyGHDL.dom.DOMMixin&#45;&gt;pyGHDL.dom.Sequential.WaitStatement -->
<g id="edge2" class="edge">
<title>pyGHDL.dom.DOMMixin&#45;&gt;pyGHDL.dom.Sequential.WaitStatement</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M908.74,-77.51C932.3,-75.75 959.47,-73.71 985.67,-71.75"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="986.04,-73.48 990.9,-71.36 985.78,-69.99 986.04,-73.48"/>
</g>
<!-- pyVHDLModel.SyntaxModel.WaitStatement -->
<g id="node3" class="node">
<title>pyVHDLModel.SyntaxModel.WaitStatement</title>
<polygon fill="none" stroke="black" stroke-width="0.5" points="955,-55 727,-55 727,-36 955,-36 955,-55"/>
<text text-anchor="middle" x="841" y="-43" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.WaitStatement</text>
</g>
<!-- pyVHDLModel.SyntaxModel.WaitStatement&#45;&gt;pyGHDL.dom.Sequential.WaitStatement -->
<g id="edge1" class="edge">
<title>pyVHDLModel.SyntaxModel.WaitStatement&#45;&gt;pyGHDL.dom.Sequential.WaitStatement</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M955.26,-53.53C965.28,-54.24 975.43,-54.96 985.43,-55.66"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="985.54,-57.43 990.65,-56.03 985.78,-53.93 985.54,-57.43"/>
</g>
<!-- pyVHDLModel.LabeledEntity -->
<g id="node4" class="node">
<title>pyVHDLModel.LabeledEntity</title>
<g id="a_node4"><a xlink:title="A ``LabeledEntity`` is a mixin class for all VHDL entities that can have">
<polygon fill="none" stroke="black" stroke-width="0.5" points="155,-56 0,-56 0,-37 155,-37 155,-56"/>
<text text-anchor="middle" x="77.5" y="-44" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.LabeledEntity</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.Statement -->
<g id="node8" class="node">
<title>pyVHDLModel.SyntaxModel.Statement</title>
<polygon fill="none" stroke="black" stroke-width="0.5" points="397,-37 191,-37 191,-18 397,-18 397,-37"/>
<text text-anchor="middle" x="294" y="-25" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.Statement</text>
</g>
<!-- pyVHDLModel.LabeledEntity&#45;&gt;pyVHDLModel.SyntaxModel.Statement -->
<g id="edge5" class="edge">
<title>pyVHDLModel.LabeledEntity&#45;&gt;pyVHDLModel.SyntaxModel.Statement</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M155.03,-39.72C164.96,-38.84 175.27,-37.93 185.58,-37.02"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="185.81,-38.75 190.64,-36.57 185.5,-35.27 185.81,-38.75"/>
</g>
<!-- pyVHDLModel.ModelEntity -->
<g id="node5" class="node">
<title>pyVHDLModel.ModelEntity</title>
<g id="a_node5"><a xlink:title="``ModelEntity`` is the base class for all classes in the VHDL language model,">
<polygon fill="none" stroke="black" stroke-width="0.5" points="151,-19 4,-19 4,0 151,0 151,-19"/>
<text text-anchor="middle" x="77.5" y="-7" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.ModelEntity</text>
</a>
</g>
</g>
<!-- pyVHDLModel.ModelEntity&#45;&gt;pyVHDLModel.SyntaxModel.Statement -->
<g id="edge4" class="edge">
<title>pyVHDLModel.ModelEntity&#45;&gt;pyVHDLModel.SyntaxModel.Statement</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M151.12,-15.59C162.29,-16.53 174.01,-17.52 185.74,-18.5"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="185.64,-20.25 190.77,-18.92 185.93,-16.76 185.64,-20.25"/>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinConditional -->
<g id="node6" class="node">
<title>pyVHDLModel.SyntaxModel.MixinConditional</title>
<g id="a_node6"><a xlink:title="A ``BaseConditional`` is a mixin&#45;class for all statements with a condition.">
<polygon fill="none" stroke="black" stroke-width="0.5" points="681,-74 443,-74 443,-55 681,-55 681,-74"/>
<text text-anchor="middle" x="562" y="-62" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.MixinConditional</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.MixinConditional&#45;&gt;pyVHDLModel.SyntaxModel.WaitStatement -->
<g id="edge7" class="edge">
<title>pyVHDLModel.SyntaxModel.MixinConditional&#45;&gt;pyVHDLModel.SyntaxModel.WaitStatement</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M681.28,-56.39C694.65,-55.47 708.28,-54.54 721.65,-53.62"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="722.09,-55.34 726.96,-53.25 721.85,-51.85 722.09,-55.34"/>
</g>
<!-- pyVHDLModel.SyntaxModel.SequentialStatement -->
<g id="node7" class="node">
<title>pyVHDLModel.SyntaxModel.SequentialStatement</title>
<g id="a_node7"><a xlink:title="A ``SequentialStatement`` is a base&#45;class for all sequential statements.">
<polygon fill="none" stroke="black" stroke-width="0.5" points="691,-37 433,-37 433,-18 691,-18 691,-37"/>
<text text-anchor="middle" x="562" y="-25" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">pyVHDLModel.SyntaxModel.SequentialStatement</text>
</a>
</g>
</g>
<!-- pyVHDLModel.SyntaxModel.SequentialStatement&#45;&gt;pyVHDLModel.SyntaxModel.WaitStatement -->
<g id="edge6" class="edge">
<title>pyVHDLModel.SyntaxModel.SequentialStatement&#45;&gt;pyVHDLModel.SyntaxModel.WaitStatement</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M691.36,-35.84C701.49,-36.5 711.68,-37.16 721.73,-37.81"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="721.87,-39.58 726.97,-38.16 722.1,-36.08 721.87,-39.58"/>
</g>
<!-- pyVHDLModel.SyntaxModel.Statement&#45;&gt;pyVHDLModel.SyntaxModel.SequentialStatement -->
<g id="edge3" class="edge">
<title>pyVHDLModel.SyntaxModel.Statement&#45;&gt;pyVHDLModel.SyntaxModel.SequentialStatement</title>
<path fill="none" stroke="black" stroke-width="0.5" d="M397.08,-27.5C407.15,-27.5 417.48,-27.5 427.8,-27.5"/>
<polygon fill="black" stroke="black" stroke-width="0.5" points="427.87,-29.25 432.87,-27.5 427.87,-25.75 427.87,-29.25"/>
</g>
</g>
</svg>
